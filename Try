import csv
import cv2
import numpy as np

lines = []
with open('./data/driving_log.csv')as csvfile:
    reader = csv.reader(csvfile)
    for line in reader:
        lines.append(line)
        
images = []
measurements=[]
for line in lines:
    source_path = line[0]
    filename = source_path#.split[-1]
    current_path = './data/'+ filename
    image = cv2.imread(current_path)
    images.append(image)
    measurement = float(line[3])
    measurements.append(measurement)

    
augmented_images = []
augmented_measurements = []
for image, measurement in zip(images, measurements):
    augmented_images.append(image)
    augmented_measurements.append(measurement)
    augmented_images.append(cv2.flip(image,1))
    augmented_measurements.append(measurement* -1)
    
    
X_train = np.array(augmented_images)
y_train = np.array(augmented_measurements)

print('The data preprocessing is done.')

from keras.models import Sequential
from keras.layers import Flatten, Dense, Cropping2D, Lambda
from keras.layers import Convolution2D, MaxPooling2D, Activation

model = Sequential()
model.add(Lambda(lambda x: (x / 255.0) - 0.5, input_shape=(160,320,3)))
model.add(Cropping2D(cropping=((70,25), (0,0))))
model.add(Convolution2D(24,5,5,subsample = (2,2),activation = 'relu'))
model.add(Convolution2D(36,5,5,subsample = (2,2),activation = 'relu'))
model.add(Convolution2D(48,5,5,subsample = (2,2),activation = 'relu'))
model.add(Convolution2D(64, 3, 3, activation = 'relu'))
model.add(Convolution2D(64, 3, 3, activation = 'relu'))
#model.add(Convolution2D(32, 3, 3))
#model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Flatten())
model.add(Dense(100))
model.add(Dense(50))
model.add(Dense(10))
#model.add()
model.add(Dense(1))


model.compile(loss='mse',optimizer = 'adam')
model.fit(X_train, y_train, validation_split=0.3, shuffle=True,nb_epoch = 10)#,
model.save('modeltry.h5')
